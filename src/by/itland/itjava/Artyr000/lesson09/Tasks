
Задание 1
    Создать класс ReplaceSmile.
    Заменить все грустные смайлы :( в строке на весёлые :)

Задание 2
    Создать класс CheckLine.
    Написать функцию, принимающую 2 параметра: строку и слово - и возвращающую true,
    если строка начинается и заканчивается этим словом. Регистр неважен

Задание 3.
    Создать класс SimpleName.
    Написать функцию, принимающую в качестве параметров имя, фамилию и отчество и возвращающую инициалы
    в формате "Ф.И.О". Учесть, что входные параметры могут быть в любом регистре,
    а результирующая строка должна быть в верхнем.

Задание 4.
    Создать класс EqualsArrayString
    Заданы два массива строк. Написать функцию, определяющую, является ли содержимое этих массивов идентичным.
    Порядок расположения элементов значения не имеет.


Задание 5.
    Создать класс TaskА1.
    В каждом слове текста 4-ю и 7-ю буквы заменить символом #. Для слов короче 4
    символов корректировку не выполнять. Для слов короче 7 символов заменять только 4-ю букву.

Задание 6.
    Создать класс TaskA2.
    Определить, сколько раз повторяется в тексте каждое слово, которое встречается в
    нем, используя массивы. Вывести результаты на консоль в формате слово=повторы

Задание 7.
    Создать класс TaskB1.
    Вывести в консоль все слова текста, начинающихся согласной и заканчивающихся
    гласной буквой.

Задание 8.
    Создать класс TaskB2.
    Вывести через \n все предложения текста в порядке возрастания количества символов
    (!) в каждом из них. В предложениях нужно сначала заменить все небуквенные символы и их
    последовательности на один пробел и выполнить trim() для каждого предложения.

Задание 9.
    Создать класс TaskC1.
    Отформатировать исходный текст с выравниванием по обоим краям. Для этого
    добавить дополнительные пробелы между словами, так чтобы ширина строк стала равной, а
    число пробелов между словами отличалось не более чем на единицу внутри каждой строки,
    причем на единицу большие последовательности пробелов должны идти с начала строки.


Задание 10.
    Создать класс TaskC2.
    Сформировать и вернуть в методе String slow (String text) из случайных слов
    исходного текста строку String минимум в сто тысяч символов путем конкатенации. Слова
    должны быть «склеены» через один пробел. Затем:
    • В методе main: определить время работы метода slow (удобно использовать
    new Date().getTime() или аналог); вывести полученный текст и время работы метода slow в
    милисекундах на консоль.
    • Ускорить процесс с StringBuilder (сделать новый метод String fast (String text),
    ВАЖНО: его итог должен быть таким как в slow до буквы). В main повторить вывод.

